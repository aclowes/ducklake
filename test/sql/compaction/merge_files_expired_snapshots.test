# name: test/sql/compaction/merge_files_expired_snapshots.test
# description: test ducklake merges files from expired snapshots if they also belong to current snapshot
# group: [compaction]

require ducklake

require parquet

test-env DUCKLAKE_CONNECTION __TEST_DIR__/{UUID}.db

test-env DATA_PATH __TEST_DIR__


statement ok
ATTACH 'ducklake:${DUCKLAKE_CONNECTION}' AS ducklake (DATA_PATH '${DATA_PATH}/ducklake_merge_expire_snapshots_schema')

statement ok
USE ducklake;

statement ok
CREATE TABLE example (key VARCHAR, value VARCHAR);

statement ok
INSERT INTO example (key, value) VALUES ('foo', 'bar');

statement ok
INSERT INTO example (key, value) VALUES ('baz', 'qux');

query II
SELECT snapshot_id, changes FROM snapshots();
----
0	{schemas_created=[main]}
1	{tables_created=[main.example]}
2	{tables_inserted_into=[1]}
3	{tables_inserted_into=[1]}

query I
SELECT count(*) FROM ducklake_list_files('ducklake', 'example');
----
2

statement ok
CALL ducklake_expire_snapshots('ducklake', versions => [1,2]);

query I
SELECT count(*) FROM ducklake_list_files('ducklake', 'example');
----
2

statement ok
CALL ducklake.merge_adjacent_files();

query I
SELECT count(*) FROM ducklake_list_files('ducklake', 'example');
----
1

query II
FROM example
----
foo	bar
baz	qux

# Add a few schema changes
statement ok
INSERT INTO example (key, value) VALUES ('a', 'b');

statement ok
ALTER TABLE example ADD COLUMN j INTEGER

statement ok
INSERT INTO example VALUES ('c', 'd', 1);

statement ok
INSERT INTO example VALUES ('e', 'f', 2);

statement ok
ALTER TABLE example DROP COLUMN key

statement ok
INSERT INTO example VALUES ('k', 3);

statement ok
INSERT INTO example VALUES ('f', 9);

query I
SELECT count(*) FROM ducklake_list_files('ducklake', 'example');
----
6

query II
SELECT snapshot_id, changes FROM snapshots();
----
0	{schemas_created=[main]}
3	{tables_inserted_into=[1]}
4	{}
5	{tables_inserted_into=[1]}
6	{tables_altered=[1]}
7	{tables_inserted_into=[1]}
8	{tables_inserted_into=[1]}
9	{tables_altered=[1]}
10	{tables_inserted_into=[1]}
11	{tables_inserted_into=[1]}


statement ok
CALL ducklake_expire_snapshots('ducklake', versions => [5,6,7,8]);

query I
SELECT count(*) FROM ducklake_list_files('ducklake', 'example');
----
6

statement ok
CALL ducklake.merge_adjacent_files();

# We altered the schema twice, hence we can have 3 files, as there are only 3 different schemas.
query I
SELECT count(*) FROM ducklake_list_files('ducklake', 'example');
----
3

query II
FROM example ORDER BY ALL
----
b	NULL
bar	NULL
d	1
f	2
f	9
k	3
qux	NULL