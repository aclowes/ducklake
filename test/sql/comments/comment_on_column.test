# name: test/sql/comments/comment_on_column.test
# description: test ducklake comments on a column
# group: [comments]

require ducklake

require parquet

test-env DUCKLAKE_CONNECTION __TEST_DIR__/

test-env DUCKLAKE_CATALOG_DB ducklake_column_comments.db

statement ok
ATTACH 'ducklake:${DUCKLAKE_CONNECTION}${DUCKLAKE_CATALOG_DB}' AS ducklake (DATA_PATH '__TEST_DIR__/ducklake_column_comments_files')

statement ok
CREATE TABLE ducklake.test_table as SELECT 1 as test_table_column

### Comment on column from table
query I
select comment from duckdb_columns() where column_name='test_table_column';
----
NULL

statement ok
COMMENT ON COLUMN ducklake.test_table.test_table_column IS 'very gezellige column'

query I
select comment from duckdb_columns() where column_name='test_table_column';
----
very gezellige column

statement ok
BEGIN

statement ok
COMMENT ON COLUMN ducklake.test_table.test_table_column IS 'toch niet zo gezellig'

query I
select comment from duckdb_columns() where column_name='test_table_column';
----
toch niet zo gezellig

# take that back!
statement ok
ROLLBACK

query I
select comment from duckdb_columns() where column_name='test_table_column';
----
very gezellige column
