# name: test/sql/time_travel/time_travel_views.test
# description: test time travel of views in ducklake
# group: [time_travel]

require ducklake

require parquet

test-env DUCKLAKE_CONNECTION __TEST_DIR__/{UUID}.db

test-env DATA_PATH __TEST_DIR__


statement ok
ATTACH 'ducklake:${DUCKLAKE_CONNECTION}' AS ducklake (DATA_PATH '${DATA_PATH}/ducklake_time_travel_views_files')

statement ok
CREATE TABLE ducklake.test(i INTEGER, j INTEGER);

statement ok
CREATE VIEW ducklake.v1 AS SELECT i * 100 AS i, j * 100 AS j FROM test ORDER BY ALL

statement ok
INSERT INTO ducklake.test VALUES (1, 2), (2, 3);

statement ok
INSERT INTO ducklake.test VALUES (3, 4), (5, 6);

query II
SELECT * FROM ducklake.v1
----
100	200
200	300
300	400
500	600

# view does not exist
statement error
SELECT * FROM ducklake.v1 AT (VERSION => 0)
----
does not exist at version 0

query II
SELECT * FROM ducklake.v1 AT (VERSION => 2)
----

query II
SELECT * FROM ducklake.v1 AT (VERSION => 3)
----
100	200
200	300

query II
SELECT * FROM ducklake.v1 AT (VERSION => 4)
----
100	200
200	300
300	400
500	600

# time travel with schemas
statement ok
BEGIN

statement ok
CREATE SCHEMA ducklake.s1

statement ok
CREATE TABLE ducklake.s1.test(i INT)

statement ok
CREATE VIEW ducklake.s1_view AS SELECT * FROM s1.test

statement ok
COMMIT

statement ok
INSERT INTO ducklake.s1.test VALUES (42), (84);

statement ok
DROP SCHEMA ducklake.s1 CASCADE

statement error
SELECT * FROM ducklake.s1_view
----
Table with name test does not exist

query I
SELECT * FROM ducklake.s1_view AT (VERSION => 5)
----

query I rowsort
SELECT * FROM ducklake.s1_view AT (VERSION => 6)
----
42
84

# explicit time travel clause mentioned in view takes priority over any versioning over the view itself
statement ok
CREATE VIEW ducklake.my_view AS SELECT * FROM ducklake.test AT (VERSION => 3)

query II rowsort
FROM ducklake.my_view
----
1	2
2	3

query II rowsort
FROM ducklake.my_view AT (VERSION => 8)
----
1	2
2	3
