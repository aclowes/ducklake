# name: test/sql/data_inlining/basic_data_inlining.test
# description: test ducklake extension
# group: [data_inlining]

require ducklake

require parquet

test-env DUCKLAKE_CONNECTION __TEST_DIR__/{UUID}.db

test-env DATA_PATH __TEST_DIR__


statement ok
ATTACH 'ducklake:${DUCKLAKE_CONNECTION}' AS ducklake (DATA_PATH '${DATA_PATH}/basic_ducklake_inlining_files', METADATA_CATALOG 'ducklake_meta', DATA_INLINING_ROW_LIMIT 10)

statement ok
CREATE TABLE ducklake.test(i INTEGER, j INTEGER);

query II
SELECT * FROM ducklake.test
----

statement ok
BEGIN

query I
INSERT INTO ducklake.test VALUES (1, 2), (NULL, 3);
----
2

query II
SELECT * FROM ducklake.test
----
1	2
NULL	3

query I
SELECT COUNT(*) FROM ducklake.test
----
2

query II
SELECT j, i FROM ducklake.test
----
2	1
3	NULL

query IIII
SELECT rowid, snapshot_id, * FROM ducklake.test
----
1000000000000000000	NULL	1	2
1000000000000000001	NULL	NULL	3

query III
SELECT filename, file_row_number, file_index FROM ducklake.test
----
__ducklake_inlined_transaction_local_data	0	1
__ducklake_inlined_transaction_local_data	1	1

statement ok
COMMIT

query II
SELECT * FROM ducklake.test
----
1	2
NULL	3

query IIII
SELECT rowid, snapshot_id, * FROM ducklake.test
----
0	2	1	2
1	2	NULL	3

# virtual columns
query III
SELECT filename, file_row_number, file_index FROM ducklake.test
----
ducklake_inlined_data_1_1	0	0
ducklake_inlined_data_1_1	1	0

query II
SELECT * FROM ducklake.test WHERE i IS NULL
----
NULL	3

query II
SELECT * FROM ducklake.test WHERE i=1
----
1	2

# all data is inlined - so we have no files
query I
SELECT COUNT(*) FROM GLOB('${DATA_PATH}/basic_ducklake_inlining_files/**')
----
0

# insert more rows than the inlining limit allows
query I
INSERT INTO ducklake.test SELECT i, 100 + i FROM range(11) t(i);
----
11

query III
SELECT COUNT(*), SUM(i), SUM(j) FROM ducklake.test
----
13	56	1160

# now we have a file
query I
SELECT COUNT(*) FROM GLOB('${DATA_PATH}/basic_ducklake_inlining_files/**')
----
1
