# name: test/sql/data_inlining/data_inlining_flush.test
# description: test flushing inlined data to disk
# group: [data_inlining]

require ducklake

require parquet

statement ok
ATTACH 'ducklake:__TEST_DIR__/ducklake_inlining_flush.db' AS ducklake (DATA_PATH '__TEST_DIR__/ducklake_inlining_flush_data', DATA_INLINING_ROW_LIMIT 10)

statement ok
CREATE TABLE ducklake.test(i INTEGER);

query I
SELECT COUNT(*) FROM ducklake.test
----
0

loop i 0 10

statement ok
INSERT INTO ducklake.test VALUES (${i})

endloop

# all data is inlined
query I
SELECT COUNT(*) FROM GLOB('__TEST_DIR__/ducklake_inlining_files/**')
----
0

query I
SELECT COUNT(*) FROM ducklake.test
----
10

query III
SELECT rowid, snapshot_id, * FROM ducklake.test ORDER BY ALL
----
0	2	0
1	3	1
2	4	2
3	5	3
4	6	4
5	7	5
6	8	6
7	9	7
8	10	8
9	11	9

query III
SELECT rowid, snapshot_id, * FROM ducklake.test AT (version => 4) ORDER BY ALL
----
0	2	0
1	3	1
2	4	2

query IIII
FROM ducklake.table_changes('test', 3, 5) ORDER BY ALL
----
3	1	insert	1
4	2	insert	2
5	3	insert	3

statement ok
BEGIN

# flush inlined data
statement ok
CALL ducklake_flush_inlined_data('ducklake')

query I
SELECT COUNT(*) FROM ducklake.test
----
10

query III
SELECT rowid, snapshot_id, * FROM ducklake.test ORDER BY ALL
----
0	2	0
1	3	1
2	4	2
3	5	3
4	6	4
5	7	5
6	8	6
7	9	7
8	10	8
9	11	9

statement ok
COMMIT

query II
SELECT snapshot_id, changes FROM ducklake.snapshots() WHERE snapshot_id IN (2, 12) ORDER BY snapshot_id
----
2	{inlined_insert=[1]}
12	{flushed_inlined=[1]}

# we now have one file
query I
SELECT COUNT(*) FROM GLOB('__TEST_DIR__/ducklake_inlining_flush_data/**')
----
1

# flushing inlined data has no changes
query IIII
FROM ducklake.table_changes('test', 11, 12) ORDER BY ALL
----

query III
SELECT rowid, snapshot_id, * FROM ducklake.test ORDER BY ALL
----
0	2	0
1	3	1
2	4	2
3	5	3
4	6	4
5	7	5
6	8	6
7	9	7
8	10	8
9	11	9

query I
SELECT * FROM ducklake.test AT (version => 4) ORDER BY ALL
----
0
1
2

# we can still access other change feeds
query IIII
FROM ducklake.table_changes('test', 2, 5) ORDER BY ALL
----
2	0	insert	0
3	1	insert	1
4	2	insert	2
5	3	insert	3

# FIXME: this does not work correctly
mode skip

query IIII
FROM ducklake.table_changes('test', 3, 5) ORDER BY ALL
----
3	1	insert	1
4	2	insert	2
5	3	insert	3

mode unskip

query III
SELECT rowid, snapshot_id, * FROM ducklake.test AT (version => 4) ORDER BY ALL
----
0	2	0
1	3	1
2	4	2
