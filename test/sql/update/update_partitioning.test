# name: test/sql/update/update_partitioning.test
# description: Update a partitioned table
# group: [update]

require ducklake

require parquet

# partitioning based on a column
test-env DUCKLAKE_CONNECTION __TEST_DIR__/{UUID}.db

test-env DATA_PATH __TEST_DIR__


statement ok
ATTACH 'ducklake:${DUCKLAKE_CONNECTION}' AS ducklake (DATA_PATH '${DATA_PATH}/ducklake_update_partitioning', METADATA_CATALOG 'ducklake_metadata')

statement ok
USE ducklake

statement ok
CREATE TABLE partitioned_tbl(part_key INTEGER, values VARCHAR);

statement ok
ALTER TABLE partitioned_tbl SET PARTITIONED BY (part_key);

statement ok
INSERT INTO partitioned_tbl SELECT i%2, concat('thisisastring_', i) FROM range(10000) t(i)

statement ok
UPDATE partitioned_tbl SET part_key=2 WHERE part_key=0

# verify files are partitioned
query III
SELECT data_file_id, partition_id, regexp_extract(path, '.*(part_key=[0-9])[/\\].*', 1) FROM ducklake_metadata.ducklake_data_file
ORDER BY ALL
----
0	2	part_key=0
1	2	part_key=1
2	2	part_key=2

query I
SELECT COUNT(*) FROM partitioned_tbl
----
10000

# query the new partition
query I
SELECT COUNT(*) FROM partitioned_tbl WHERE part_key=2
----
5000

query II
EXPLAIN ANALYZE SELECT COUNT(*) FROM partitioned_tbl WHERE part_key=2
----
analyzed_plan	<REGEX>:.*Total Files Read: 1.*

# query the old partition with time travel
query I
SELECT COUNT(*) FROM partitioned_tbl AT (VERSION => 3) WHERE part_key=0
----
5000

query II
EXPLAIN ANALYZE SELECT COUNT(*) FROM partitioned_tbl AT (VERSION => 3) WHERE part_key=0
----
analyzed_plan	<REGEX>:.*Total Files Read: 1.*
