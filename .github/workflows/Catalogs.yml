name: DBMS Catalog Tests
on: [push, pull_request, repository_dispatch]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref || '' }}-${{ github.base_ref || '' }}-${{ github.ref != 'refs/heads/main' || github.sha }}
  cancel-in-progress: true
defaults:
  run:
    shell: bash

jobs:
  ducklake-config-tests:
    name: DuckDB Tests with DuckLake + (Postgres/SQLite)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        duckdb_version: [ '<submodule_version>' ]
        arch: ['linux_amd64']
        vcpkg_version: [ '2023.04.15' ]
        include:
          - arch: 'linux_amd64'
            vcpkg_triplet: 'x64-linux'

    env:
      VCPKG_TARGET_TRIPLET: ${{ matrix.vcpkg_triplet }}
      GEN: Ninja
      VCPKG_TOOLCHAIN_PATH: ${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake
      ENABLE_SQLITE_SCANNER: ON
      ENABLE_POSTGRES_SCANNER: ON

    steps:
    - name: Install required ubuntu packages
      run: |
        sudo apt-get update -y -qq
        sudo apt-get install -y -qq build-essential cmake ninja-build ccache python3

    - name: Setup PostgreSQL for Linux/macOS/Windows
      uses: ikalnytskyi/action-setup-postgres@v7
      with:
        postgres-version: '15'
        username: 'postgres'
        password: 'postgres'
        database: 'postgres'
        port: '5432'
        ssl: true

    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: 'true'

    - name: Checkout DuckDB to version
      if: ${{ matrix.duckdb_version != '<submodule_version>'}}
      run: |
        cd duckdb
        git checkout ${{ matrix.duckdb_version }}

    - name: Setup Ccache
      uses: hendrikmuhs/ccache-action@main
      with:
        key: ${{ github.job }}
        save: ${{ github.ref == 'refs/heads/main' || github.repository != 'duckdb/duckdb-postgres' }}

    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v11.1
      with:
        vcpkgGitCommitId: ce613c41372b23b1f51333815feb3edd87ef8a8b

    - name: Build extension
      env:
        GEN: ninja
      run: |
        make release

    - name: Test Postgres
      env:
        PGSERVICE: postgres
      run: |
        createdb ducklakedb
        build/release/test/unittest --test-config test/configs/postgres.json

    - name: Test SQLite
      run: |
        build/release/test/unittest --test-config test/configs/sqlite.json